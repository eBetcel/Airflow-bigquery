---
version: '3'
x-airflow-common: &airflow-common
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.5.0}
    environment: &airflow-common-env # Core configurations
        AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
        AIRFLOW__CORE__EXECUTOR: LocalExecutor
        AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
        AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
        # AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${SQL_USER}:${SQL_PASSWORD}@postgres/airflow #for compatibility
        AIRFLOW__CORE__FERNET_KEY: ''
        AIRFLOW__CORE__PARALLELISM: 32
        AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: 16
        AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG: 16
        AIRFLOW__CORE__DEFAULT_TIMEZONE: 'America/Sao_Paulo'
        AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
        AIRFLOW__CORE__PLUGINS_FOLDER: /opt/airflow/plugins
        AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
        # Weberver Configuration
        AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: 'America/Sao_Paulo'
        AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'

        # Remote Logging
        # AIRFLOW__LOGGING__REMOTE_LOGGING: 'true'
        # AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER: ${AIRFLOW_BUCKET}
        # AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID: 'google_cloud_default'

        # Google Auth (does not work)
        # AIRFLOW__WEBSERVER__AUTHENTICATE: 'True'
        # AIRFLOW__WEBSERVER__AUTH_BACKEND: 'airflow.contrib.auth.backends.google_auth'
        # AIRFLOW__GOOGLE__CLIENT__ID: '${GOOGLE_OAUTH_CLIEND_ID}'
        # AIRFLOW__GOOGLE__CLIENT_SECRET: '${GOOGLE_OAUTH_APP_SECRET}'
        # AIRFLOW__GOOGLE__DOMAIN: '${DOMAIN}'
    volumes:
        - ./dags:/opt/airflow/dags
        - ./plugins:/opt/airflow/plugins
        - ./resources:/opt/airflow/resources
    networks:
        - postgres-db-network
    user: '${AIRFLOW_UID:-50000}:0'
    depends_on: &airflow-common-depends-on
        postgres:
            condition: service_healthy

services:
    postgres:
        image: postgres:13
        environment:
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow
        ports:
            - 5432:5432
        volumes:
            - postgres-db-volume:/var/lib/postgresql/data
        networks:
            - postgres-db-network
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', 'airflow']
            interval: 5s
            retries: 5
        restart: always

    airflow-scheduler:
        <<: *airflow-common
        command: scheduler
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"',
                ]
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always
        depends_on:
            <<: *airflow-common-depends-on
            airflow-init:
                condition: service_completed_successfully

    airflow-webserver:
        <<: *airflow-common
        command: webserver
        ports:
            - 443:8080
            - 8080:8080
        healthcheck:
            test: ['CMD', 'curl', '--fail', 'http://localhost:8080/health']
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always

    airflow-init:
        <<: *airflow-common
        command: version
        environment:
            <<: *airflow-common-env
            _AIRFLOW_DB_UPGRADE: 'true'
            _AIRFLOW_WWW_USER_CREATE: 'true'
            _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
            _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

    airflow-triggerer:
        <<: *airflow-common
        command: triggerer
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'airflow jobs check --job-type TriggererJob --hostname "$${HOSTNAME}"',
                ]
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always
        depends_on:
            <<: *airflow-common-depends-on
            airflow-init:
                condition: service_completed_successfully
    pgadmin:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: 'admin@admin.com'
            PGADMIN_DEFAULT_PASSWORD: 'teste'
        ports:
            - 16543:80
        depends_on:
            <<: *airflow-common-depends-on
        networks:
            - postgres-db-network
volumes:
    postgres-db-volume:

networks:
    postgres-db-network:
        driver: bridge
